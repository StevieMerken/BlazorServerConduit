@page "/"
@using BlazorServerConduit.Services;

@inject ArticlesService ArticleService;

<PageTitle>Home</PageTitle>

<div class="home-page">
    <div class="banner">
        <div class="container">
            <h1 class="logo-font">conduit</h1>
            <p>A place to share your knowledge.</p>
        </div>
    </div>

    <div class="container page">
        <div class="row">
            <div class="col-md-9">
                <FeedToggle Filter="_filter" OnFilterChanged="(newFilter) => OnFilterChanged(newFilter)" />

                @if(_articleReponse is not null)
                {
                    foreach(var article in _articleReponse.Articles)
                    {
                        <ArticleComponent @key=article Article="article" ></ArticleComponent>
                    }
                }
                else
                {
                    <div class="article-preview">
                        Loading articles...
                    </div>
                }
            </div>

            <div class="col-md-3">
                <div class="sidebar">
                    <PopularTags OnTagSelected="OnPopularTagSelected"/>
                </div>
            </div>
        </div>
    </div>
</div>

@code
{
    private MultipleArticlesResponse? _articleReponse;
    private ArticleFilter _filter = new ArticleFilter();

    protected override async Task OnInitializedAsync()
    {
        await LoadArticlesAsync();
    }

    private async void OnPopularTagSelected(string tag)
    {
        _filter = _filter with { Tag = tag, FeedType = FeedType.Tag };
        await LoadArticlesAsync();        
    }
    
    private async Task OnFilterChanged(ArticleFilter newFilter)
    {
        _filter = newFilter;
        await LoadArticlesAsync();
    }

    private async Task LoadArticlesAsync()
    {
        _articleReponse = null;
        _articleReponse = await ArticleService.GetArticlesAsync(_filter);
        StateHasChanged();
    }
}